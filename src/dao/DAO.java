package dao;

import java.sql.*;

import org.apache.commons.dbutils.DbUtils;

public class DAO {
	private Connection connection;

	public DAO() {
		try {
			Class.forName("org.hsqldb.jdbcDriver");
		} catch (ClassNotFoundException e) {
			throw new RuntimeException(e);
		}

		try {
			String db = "${user.home}/i377/Team02d/db;shutdown=true";
			connection = DriverManager.getConnection("jdbc:hsqldb:" + db, "sa",
					"");
		} catch (Exception e) {
			throw new RuntimeException(e);
		}
	}

	public Connection getConnection() {
		return connection;
	}

	public boolean executeSQL(String sql) {
		Statement st = null;
		try {
			st = connection.createStatement();
			return st.execute(sql);
		} catch (Exception e) {
			throw new RuntimeException(e);
		} finally {
			DbUtils.closeQuietly(st);
		}
	}

	public int executeUpdateSQL(String sql) {
		Statement st = null;
		try {
			st = connection.createStatement();
			return st.executeUpdate(sql);
		} catch (Exception e) {
			throw new RuntimeException(e);
		} finally {
			DbUtils.closeQuietly(st);
		}
	}

	public void createTables() {
		dropTables();
		createAdminUnitTypeTable();
		createAdminUnitTypeSubordinationTable();
		createAdminUnitTable();
		createAdminUnitSubordinationTable();
		createArmyUnitTable();
		createArmyUnitSubordinationTable();
	}

	private void dropTables() {
		executeSQL("DROP TABLE AdminUnitType IF EXISTS");
		executeSQL("DROP TABLE AdminUnitTypeSubordination IF EXISTS");
		executeSQL("DROP TABLE AdminUnit IF EXISTS");
		executeSQL("DROP TABLE AdminUnitSubordination IF EXISTS");
		executeSQL("DROP TABLE ArmyUnit IF EXISTS");
		executeSQL("DROP TABLE ArmyUnitSubordination IF EXISTS");
	}

	public void insertDummyData() {
		insertDummyDataToAdminUnitTypeTable();
		insertDummyDataToAdminUnitTypeSubordinationTable();
		insertDummyDataToAdminUnitTable();
		insertDummyDataToAdminUnitSubordinationTable();
		insertDummyDataToArmyUnitTable();
		insertDummyDataToArmyUnitSubordinationTable();
	}

	private void createAdminUnitTypeTable() {
		executeSQL("create table AdminUnitType ( "
				+ "AdminUnitTypeID INTEGER GENERATED BY DEFAULT AS IDENTITY (START WITH 1 INCREMENT BY 1) NOT NULL,"
				+ "Code                     VARCHAR(10) NOT NULL,"
				+ "Name                     VARCHAR(100) NOT NULL,"
				+ "Comment                  LONGVARCHAR,"
				+ "FromDate                 DATE NOT NULL,"
				+ "ToDate                   DATE NOT NULL,"
				+ "OpenedBy                 VARCHAR(32) NOT NULL,"
				+ "OpenedDate               DATE NOT NULL,"
				+ "ChangedBy                VARCHAR(32) NOT NULL,"
				+ "ChangedDate              DATE NOT NULL,"
				+ "ClosedBy                 VARCHAR(32),"
				+ "ClosedDate               DATE NOT NULL,"
				+ "PRIMARY KEY (AdminUnitTypeID)" + ")");
	}

	private void insertDummyDataToAdminUnitTypeTable() {

	}

	private void createAdminUnitTypeSubordinationTable() {
		executeSQL("create table AdminUnitTypeSubordination ( "
				+ "AdminUnitTypeSubordinationID INTEGER GENERATED BY DEFAULT AS IDENTITY (START WITH 1 INCREMENT BY 1) NOT NULL,"
				+ "AdminUnitTypeID			INTEGER," // master admin unit id
				+ "SubAdminUnitTypeID		INTEGER," // child admin unit id
				+ "Comment                  LONGVARCHAR,"
				+ "OpenedBy                 VARCHAR(32) NOT NULL,"
				+ "OpenedDate               DATE NOT NULL,"
				+ "ChangedBy                VARCHAR(32) NOT NULL,"
				+ "ChangedDate              DATE NOT NULL,"
				+ "ClosedBy                 VARCHAR(32),"
				+ "ClosedDate               DATE NOT NULL,"
				+ "PRIMARY KEY (AdminUnitTypeSubordinationID)" + ")");
	}

	private void insertDummyDataToAdminUnitTypeSubordinationTable() {

	}

	
	private void createAdminUnitTable() {
		executeSQL("create table AdminUnit ( "
				+ "AdminUnitID INTEGER GENERATED BY DEFAULT AS IDENTITY (START WITH 1 INCREMENT BY 1) NOT NULL,"
				+ "Code                     VARCHAR(10) NOT NULL,"
				+ "Name                     VARCHAR(100) NOT NULL,"
				+ "Comment                  LONGVARCHAR,"
				+ "FromDate                 DATE NOT NULL,"
				+ "ToDate                   DATE NOT NULL,"
				+ "OpenedBy                 VARCHAR(32) NOT NULL,"
				+ "OpenedDate               DATE NOT NULL,"
				+ "ChangedBy                VARCHAR(32) NOT NULL,"
				+ "ChangedDate              DATE NOT NULL,"
				+ "ClosedBy                 VARCHAR(32),"
				+ "ClosedDate               DATE NOT NULL,"
				+ "AdminUnitTypeID			INTEGER," 
				+ "PRIMARY KEY (AdminUnitID)" + ")");
	}

	private void insertDummyDataToAdminUnitTable() {

	}
	
	private void createAdminUnitSubordinationTable() {
		executeSQL("create table AdminUnitSubordination ( "
				+ "AdminUnitSubordinationID INTEGER GENERATED BY DEFAULT AS IDENTITY (START WITH 1 INCREMENT BY 1) NOT NULL,"
				+ "MasterAdminUnitID		INTEGER,"
				+ "SubordinateAdminUnitID	INTEGER,"
				+ "Comment                  LONGVARCHAR,"
				+ "FromDate                 DATE NOT NULL,"
				+ "ToDate                   DATE NOT NULL,"
				+ "OpenedBy                 VARCHAR(32) NOT NULL,"
				+ "OpenedDate               DATE NOT NULL,"
				+ "ChangedBy                VARCHAR(32) NOT NULL,"
				+ "ChangedDate              DATE NOT NULL,"
				+ "ClosedBy                 VARCHAR(32),"
				+ "ClosedDate               DATE NOT NULL,"
				+ "AdminUnitTypeID			INTEGER," 
				+ "PRIMARY KEY (AdminUnitSubordinationID)" + ")");
	}

	private void insertDummyDataToAdminUnitSubordinationTable() {

	}
	
	private void createArmyUnitTable() {
		executeSQL("create table ArmyUnit ( "
				+ "ArmyUnitID INTEGER GENERATED BY DEFAULT AS IDENTITY (START WITH 1 INCREMENT BY 1) NOT NULL,"
				+ "Code                     VARCHAR(10) NOT NULL,"
				+ "AdminUnitID				INTEGER," 
				+ "Comment                  LONGVARCHAR,"
				+ "FromDate                 DATE NOT NULL,"
				+ "ToDate                   DATE NOT NULL,"
				+ "OpenedBy                 VARCHAR(32) NOT NULL,"
				+ "OpenedDate               DATE NOT NULL,"
				+ "ChangedBy                VARCHAR(32) NOT NULL,"
				+ "ChangedDate              DATE NOT NULL,"
				+ "ClosedBy                 VARCHAR(32),"
				+ "ClosedDate               DATE NOT NULL,"
				+ "PRIMARY KEY (ArmyUnitID)" + ")");
	}

	private void insertDummyDataToArmyUnitTable() {

	}
	
	
	private void createArmyUnitSubordinationTable() {
		executeSQL("create table ArmyUnitSubordination ( "
				+ "ArmyUnitSubordinationID INTEGER GENERATED BY DEFAULT AS IDENTITY (START WITH 1 INCREMENT BY 1) NOT NULL,"
				+ "MasterArmyUnitID			INTEGER,"
				+ "SubordinateArmyUnitID	INTEGER,"
				+ "Comment                  LONGVARCHAR,"
				+ "FromDate                 DATE NOT NULL,"
				+ "ToDate                   DATE NOT NULL,"
				+ "OpenedBy                 VARCHAR(32) NOT NULL,"
				+ "OpenedDate               DATE NOT NULL,"
				+ "ChangedBy                VARCHAR(32) NOT NULL,"
				+ "ChangedDate              DATE NOT NULL,"
				+ "ClosedBy                 VARCHAR(32),"
				+ "ClosedDate               DATE NOT NULL,"
				+ "PRIMARY KEY (ArmyUnitSubordinationID)" + ")");
	}

	private void insertDummyDataToArmyUnitSubordinationTable() {

	}
		
}
